{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiRequest } from '../utils/apiHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Verify token with the backend\n      const userData = await apiRequest('/api/accounts/user/');\n      console.log('User data retrieved:', userData);\n      setUser(userData);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Token validation failed:', error);\n      // Invalid token, clear storage\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // FastAPI uses OAuth2 password flow which expects username/password\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          username: email,\n          // FastAPI OAuth2 uses username field\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw {\n          status: response.status,\n          data\n        };\n      }\n      console.log('Login response:', data);\n\n      // Save token after successful login\n      if (data.access_token) {\n        localStorage.setItem('token', data.access_token);\n        setUser(data.user);\n        setIsAuthenticated(true);\n        return data;\n      } else {\n        throw new Error('No token received from server');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw {\n          status: response.status,\n          data\n        };\n      }\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      // Optionally call logout endpoint\n      await apiRequest('/api/accounts/logout/', 'POST');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear regardless of backend response\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiRequest","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuthStatus","token","localStorage","getItem","userData","console","log","error","removeItem","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","URLSearchParams","username","data","json","ok","status","access_token","setItem","Error","register","JSON","stringify","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiRequest } from '../utils/apiHelper';\n\nconst AuthContext = createContext(null);\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Verify token with the backend\n      const userData = await apiRequest('/api/accounts/user/');\n      console.log('User data retrieved:', userData);\n      setUser(userData);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Token validation failed:', error);\n      // Invalid token, clear storage\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      // FastAPI uses OAuth2 password flow which expects username/password\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          username: email, // FastAPI OAuth2 uses username field\n          password: password,\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw { status: response.status, data };\n      }\n      \n      console.log('Login response:', data);\n      \n      // Save token after successful login\n      if (data.access_token) {\n        localStorage.setItem('token', data.access_token);\n        setUser(data.user);\n        setIsAuthenticated(true);\n        return data;\n      } else {\n        throw new Error('No token received from server');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw { status: response.status, data };\n      }\n      \n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Optionally call logout endpoint\n      await apiRequest('/api/accounts/logout/', 'POST');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear regardless of backend response\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}