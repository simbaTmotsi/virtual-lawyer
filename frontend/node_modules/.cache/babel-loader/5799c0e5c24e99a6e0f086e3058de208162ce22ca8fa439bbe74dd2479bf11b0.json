{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const getAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\nconst apiRequest = async (endpoint, method = 'GET', body = null, requiresAuth = true) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const token = getAuthToken();\n  if (requiresAuth && token) {\n    headers['Authorization'] = `Bearer ${token}`; // Adjust if backend expects 'JWT' or other scheme\n  }\n  const config = {\n    method: method,\n    headers: headers\n  };\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n  try {\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      let errorData;\n      try {\n        errorData = await response.json();\n      } catch (e) {\n        errorData = {\n          message: response.statusText\n        };\n      }\n      // Throw an error object that includes status and backend message\n      const error = new Error(errorData.detail || errorData.message || 'API request failed');\n      error.status = response.status;\n      error.data = errorData;\n      throw error;\n    }\n\n    // Handle responses with no content\n    if (response.status === 204) {\n      return null;\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`API Error (${method} ${endpoint}):`, error);\n    // Re-throw the error so components can handle it\n    throw error;\n  }\n};\nexport default apiRequest;\nexport const setAuthToken = token => {\n  if (token) {\n    localStorage.setItem('authToken', token);\n  } else {\n    localStorage.removeItem('authToken');\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","getAuthToken","localStorage","getItem","apiRequest","endpoint","method","body","requiresAuth","url","headers","token","config","JSON","stringify","response","fetch","ok","errorData","json","e","message","statusText","error","Error","detail","status","data","console","setAuthToken","setItem","removeItem"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const getAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\n\nconst apiRequest = async (endpoint, method = 'GET', body = null, requiresAuth = true) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n  const token = getAuthToken();\n\n  if (requiresAuth && token) {\n    headers['Authorization'] = `Bearer ${token}`; // Adjust if backend expects 'JWT' or other scheme\n  }\n\n  const config = {\n    method: method,\n    headers: headers,\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  try {\n    const response = await fetch(url, config);\n\n    if (!response.ok) {\n      let errorData;\n      try {\n        errorData = await response.json();\n      } catch (e) {\n        errorData = { message: response.statusText };\n      }\n      // Throw an error object that includes status and backend message\n      const error = new Error(errorData.detail || errorData.message || 'API request failed');\n      error.status = response.status;\n      error.data = errorData;\n      throw error;\n    }\n\n    // Handle responses with no content\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(`API Error (${method} ${endpoint}):`, error);\n    // Re-throw the error so components can handle it\n    throw error;\n  }\n};\n\nexport default apiRequest;\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    localStorage.setItem('authToken', token);\n  } else {\n    localStorage.removeItem('authToken');\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAC1C,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,YAAY,GAAG,IAAI,KAAK;EACvF,MAAMC,GAAG,GAAG,GAAGZ,YAAY,GAAGQ,QAAQ,EAAE;EACxC,MAAMK,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EACD,MAAMC,KAAK,GAAGV,YAAY,CAAC,CAAC;EAE5B,IAAIO,YAAY,IAAIG,KAAK,EAAE;IACzBD,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE,CAAC,CAAC;EAChD;EAEA,MAAMC,MAAM,GAAG;IACbN,MAAM,EAAEA,MAAM;IACdI,OAAO,EAAEA;EACX,CAAC;EAED,IAAIH,IAAI,EAAE;IACRK,MAAM,CAACL,IAAI,GAAGM,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;EACpC;EAEA,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAEG,MAAM,CAAC;IAEzC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,IAAIC,SAAS;MACb,IAAI;QACFA,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVF,SAAS,GAAG;UAAEG,OAAO,EAAEN,QAAQ,CAACO;QAAW,CAAC;MAC9C;MACA;MACA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACN,SAAS,CAACO,MAAM,IAAIP,SAAS,CAACG,OAAO,IAAI,oBAAoB,CAAC;MACtFE,KAAK,CAACG,MAAM,GAAGX,QAAQ,CAACW,MAAM;MAC9BH,KAAK,CAACI,IAAI,GAAGT,SAAS;MACtB,MAAMK,KAAK;IACb;;IAEA;IACA,IAAIR,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,IAAI;IACb;IAEA,OAAO,MAAMX,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,cAAcjB,MAAM,IAAID,QAAQ,IAAI,EAAEkB,KAAK,CAAC;IAC1D;IACA,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAenB,UAAU;AAEzB,OAAO,MAAMyB,YAAY,GAAIlB,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTT,YAAY,CAAC4B,OAAO,CAAC,WAAW,EAAEnB,KAAK,CAAC;EAC1C,CAAC,MAAM;IACLT,YAAY,CAAC6B,UAAU,CAAC,WAAW,CAAC;EACtC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}