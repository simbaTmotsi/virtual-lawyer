{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/calendar/EventTypeBadge.js\";\nimport React from 'react';\nimport { CalendarIcon, BriefcaseIcon, ClockIcon, DocumentTextIcon, BellAlertIcon, QuestionMarkCircleIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventTypeBadge = ({\n  type\n}) => {\n  // Define properties based on event type\n  const typeProperties = {\n    meeting: {\n      icon: CalendarIcon,\n      label: 'Meeting',\n      bgColor: 'bg-indigo-100 dark:bg-indigo-900/30',\n      textColor: 'text-indigo-800 dark:text-indigo-200'\n    },\n    deadline: {\n      icon: ClockIcon,\n      label: 'Deadline',\n      bgColor: 'bg-red-100 dark:bg-red-900/30',\n      textColor: 'text-red-800 dark:text-red-200'\n    },\n    hearing: {\n      icon: BriefcaseIcon,\n      label: 'Court Hearing',\n      bgColor: 'bg-amber-100 dark:bg-amber-900/30',\n      textColor: 'text-amber-800 dark:text-amber-200'\n    },\n    task: {\n      icon: DocumentTextIcon,\n      label: 'Task',\n      bgColor: 'bg-green-100 dark:bg-green-900/30',\n      textColor: 'text-green-800 dark:text-green-200'\n    },\n    reminder: {\n      icon: BellAlertIcon,\n      label: 'Reminder',\n      bgColor: 'bg-purple-100 dark:bg-purple-900/30',\n      textColor: 'text-purple-800 dark:text-purple-200'\n    },\n    other: {\n      icon: QuestionMarkCircleIcon,\n      label: 'Other',\n      bgColor: 'bg-gray-100 dark:bg-gray-700',\n      textColor: 'text-gray-800 dark:text-gray-200'\n    }\n  };\n\n  // Get properties for this type, or use 'other' as fallback\n  const {\n    icon: Icon,\n    label,\n    bgColor,\n    textColor\n  } = typeProperties[type] || typeProperties.other;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${bgColor} ${textColor}`,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      className: \"h-3.5 w-3.5 mr-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = EventTypeBadge;\nexport default EventTypeBadge;\nvar _c;\n$RefreshReg$(_c, \"EventTypeBadge\");","map":{"version":3,"names":["React","CalendarIcon","BriefcaseIcon","ClockIcon","DocumentTextIcon","BellAlertIcon","QuestionMarkCircleIcon","jsxDEV","_jsxDEV","EventTypeBadge","type","typeProperties","meeting","icon","label","bgColor","textColor","deadline","hearing","task","reminder","other","Icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/calendar/EventTypeBadge.js"],"sourcesContent":["import React from 'react';\nimport {\n  CalendarIcon,\n  BriefcaseIcon,\n  ClockIcon,\n  DocumentTextIcon,\n  BellAlertIcon,\n  QuestionMarkCircleIcon\n} from '@heroicons/react/24/outline';\n\nconst EventTypeBadge = ({ type }) => {\n  // Define properties based on event type\n  const typeProperties = {\n    meeting: {\n      icon: CalendarIcon,\n      label: 'Meeting',\n      bgColor: 'bg-indigo-100 dark:bg-indigo-900/30',\n      textColor: 'text-indigo-800 dark:text-indigo-200'\n    },\n    deadline: {\n      icon: ClockIcon,\n      label: 'Deadline',\n      bgColor: 'bg-red-100 dark:bg-red-900/30',\n      textColor: 'text-red-800 dark:text-red-200'\n    },\n    hearing: {\n      icon: BriefcaseIcon,\n      label: 'Court Hearing',\n      bgColor: 'bg-amber-100 dark:bg-amber-900/30',\n      textColor: 'text-amber-800 dark:text-amber-200'\n    },\n    task: {\n      icon: DocumentTextIcon,\n      label: 'Task',\n      bgColor: 'bg-green-100 dark:bg-green-900/30',\n      textColor: 'text-green-800 dark:text-green-200'\n    },\n    reminder: {\n      icon: BellAlertIcon,\n      label: 'Reminder',\n      bgColor: 'bg-purple-100 dark:bg-purple-900/30',\n      textColor: 'text-purple-800 dark:text-purple-200'\n    },\n    other: {\n      icon: QuestionMarkCircleIcon,\n      label: 'Other',\n      bgColor: 'bg-gray-100 dark:bg-gray-700',\n      textColor: 'text-gray-800 dark:text-gray-200'\n    }\n  };\n  \n  // Get properties for this type, or use 'other' as fallback\n  const { icon: Icon, label, bgColor, textColor } = typeProperties[type] || typeProperties.other;\n  \n  return (\n    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${bgColor} ${textColor}`}>\n      <Icon className=\"h-3.5 w-3.5 mr-1\" />\n      {label}\n    </span>\n  );\n};\n\nexport default EventTypeBadge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,YAAY,EACZC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,aAAa,EACbC,sBAAsB,QACjB,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnC;EACA,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE;MACPC,IAAI,EAAEZ,YAAY;MAClBa,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,qCAAqC;MAC9CC,SAAS,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE;MACRJ,IAAI,EAAEV,SAAS;MACfW,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE,+BAA+B;MACxCC,SAAS,EAAE;IACb,CAAC;IACDE,OAAO,EAAE;MACPL,IAAI,EAAEX,aAAa;MACnBY,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE,mCAAmC;MAC5CC,SAAS,EAAE;IACb,CAAC;IACDG,IAAI,EAAE;MACJN,IAAI,EAAET,gBAAgB;MACtBU,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,mCAAmC;MAC5CC,SAAS,EAAE;IACb,CAAC;IACDI,QAAQ,EAAE;MACRP,IAAI,EAAER,aAAa;MACnBS,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE,qCAAqC;MAC9CC,SAAS,EAAE;IACb,CAAC;IACDK,KAAK,EAAE;MACLR,IAAI,EAAEP,sBAAsB;MAC5BQ,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,8BAA8B;MACvCC,SAAS,EAAE;IACb;EACF,CAAC;;EAED;EACA,MAAM;IAAEH,IAAI,EAAES,IAAI;IAAER,KAAK;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGL,cAAc,CAACD,IAAI,CAAC,IAAIC,cAAc,CAACU,KAAK;EAE9F,oBACEb,OAAA;IAAMe,SAAS,EAAE,2EAA2ER,OAAO,IAAIC,SAAS,EAAG;IAAAQ,QAAA,gBACjHhB,OAAA,CAACc,IAAI;MAACC,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCd,KAAK;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACC,EAAA,GAlDIpB,cAAc;AAoDpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}