{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/pages/admin/AnalyticsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ChartBarIcon, UsersIcon, DocumentDuplicateIcon, ClockIcon, ArrowPathIcon, CalendarIcon, BriefcaseIcon } from '@heroicons/react/24/outline';\nimport apiRequest from '../../utils/api';\nimport ChartComponent from '../../components/charts/ChartComponent';\nimport DateRangeSelector from '../../components/analytics/DateRangeSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsDashboard = () => {\n  _s();\n  const [analyticsData, setAnalyticsData] = useState({\n    stats: [],\n    userSignups: null,\n    apiUsage: null,\n    caseDistribution: null,\n    billingData: null,\n    timeTracking: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Date range state\n  const [startDate, setStartDate] = useState(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]);\n  const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]);\n  const fetchAnalyticsData = async () => {\n    try {\n      setRefreshing(true);\n\n      // Use the correct endpoint for admin stats\n      const stats = await apiRequest('/api/analytics/summary/');\n\n      // Fetch user signup data for chart with date range\n      const userSignups = await apiRequest(`/api/analytics/user-signups/?start_date=${startDate}&end_date=${endDate}`);\n\n      // Fetch API usage data for chart\n      const apiUsage = await apiRequest('/api/analytics/api-usage/');\n\n      // Fetch case distribution data\n      const caseDistribution = await apiRequest('/api/analytics/case-distribution/');\n\n      // Fetch billing analytics data with date range\n      const billingData = await apiRequest(`/api/analytics/billing/?start_date=${startDate}&end_date=${endDate}`);\n\n      // Fetch time tracking analytics\n      const timeTracking = await apiRequest('/api/analytics/time-tracking/');\n      setAnalyticsData({\n        stats: stats || [],\n        userSignups,\n        apiUsage,\n        caseDistribution,\n        billingData,\n        timeTracking\n      });\n      setError(null);\n    } catch (err) {\n      console.error('Failed to fetch analytics data:', err);\n      setError('Failed to load analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [startDate, endDate]);\n\n  // Handle date range selection\n  const handleRangeChange = (start, end) => {\n    setStartDate(start);\n    setEndDate(end);\n  };\n  if (loading && !refreshing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !analyticsData.stats.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-lg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Map stats to their icons and colors\n  const statsWithIcons = analyticsData.stats.map(stat => {\n    const icons = {\n      'Total Users': UsersIcon,\n      'Active Users (24h)': UsersIcon,\n      'Documents Processed': DocumentDuplicateIcon,\n      'Avg. API Response Time': ClockIcon\n    };\n    const colors = {\n      'Total Users': 'bg-blue-500',\n      'Active Users (24h)': 'bg-green-500',\n      'Documents Processed': 'bg-indigo-500',\n      'Avg. API Response Time': 'bg-yellow-500'\n    };\n    return {\n      ...stat,\n      icon: icons[stat.name] || UsersIcon,\n      color: colors[stat.name] || 'bg-gray-500'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-900 dark:text-white\",\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchAnalyticsData,\n        disabled: refreshing,\n        className: \"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n          className: `-ml-1 mr-2 h-4 w-4 ${refreshing ? 'animate-spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \"Refresh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsDashboard, \"RqlLTpq5RDxAjqnHWhgm8/HLmQM=\");\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ChartBarIcon","UsersIcon","DocumentDuplicateIcon","ClockIcon","ArrowPathIcon","CalendarIcon","BriefcaseIcon","apiRequest","ChartComponent","DateRangeSelector","jsxDEV","_jsxDEV","AnalyticsDashboard","_s","analyticsData","setAnalyticsData","stats","userSignups","apiUsage","caseDistribution","billingData","timeTracking","loading","setLoading","refreshing","setRefreshing","error","setError","startDate","setStartDate","Date","now","toISOString","split","endDate","setEndDate","fetchAnalyticsData","err","console","handleRangeChange","start","end","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","statsWithIcons","map","stat","icons","colors","icon","name","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/pages/admin/AnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ChartBarIcon, \n  UsersIcon, \n  DocumentDuplicateIcon, \n  ClockIcon,\n  ArrowPathIcon,\n  CalendarIcon,\n  BriefcaseIcon\n} from '@heroicons/react/24/outline';\nimport apiRequest from '../../utils/api';\nimport ChartComponent from '../../components/charts/ChartComponent';\nimport DateRangeSelector from '../../components/analytics/DateRangeSelector';\n\nconst AnalyticsDashboard = () => {\n  const [analyticsData, setAnalyticsData] = useState({\n    stats: [],\n    userSignups: null,\n    apiUsage: null,\n    caseDistribution: null,\n    billingData: null,\n    timeTracking: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Date range state\n  const [startDate, setStartDate] = useState(\n    new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\n  );\n  const [endDate, setEndDate] = useState(\n    new Date().toISOString().split('T')[0]\n  );\n\n  const fetchAnalyticsData = async () => {\n    try {\n      setRefreshing(true);\n      \n      // Use the correct endpoint for admin stats\n      const stats = await apiRequest('/api/analytics/summary/');\n      \n      // Fetch user signup data for chart with date range\n      const userSignups = await apiRequest(`/api/analytics/user-signups/?start_date=${startDate}&end_date=${endDate}`);\n      \n      // Fetch API usage data for chart\n      const apiUsage = await apiRequest('/api/analytics/api-usage/');\n      \n      // Fetch case distribution data\n      const caseDistribution = await apiRequest('/api/analytics/case-distribution/');\n      \n      // Fetch billing analytics data with date range\n      const billingData = await apiRequest(`/api/analytics/billing/?start_date=${startDate}&end_date=${endDate}`);\n      \n      // Fetch time tracking analytics\n      const timeTracking = await apiRequest('/api/analytics/time-tracking/');\n      \n      setAnalyticsData({\n        stats: stats || [],\n        userSignups,\n        apiUsage,\n        caseDistribution,\n        billingData,\n        timeTracking\n      });\n      setError(null);\n    } catch (err) {\n      console.error('Failed to fetch analytics data:', err);\n      setError('Failed to load analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [startDate, endDate]);\n\n  // Handle date range selection\n  const handleRangeChange = (start, end) => {\n    setStartDate(start);\n    setEndDate(end);\n  };\n\n  if (loading && !refreshing) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n\n  if (error && !analyticsData.stats.length) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-red-500 text-lg\">{error}</p>\n      </div>\n    );\n  }\n\n  // Map stats to their icons and colors\n  const statsWithIcons = analyticsData.stats.map(stat => {\n    const icons = {\n      'Total Users': UsersIcon,\n      'Active Users (24h)': UsersIcon,\n      'Documents Processed': DocumentDuplicateIcon,\n      'Avg. API Response Time': ClockIcon\n    };\n    \n    const colors = {\n      'Total Users': 'bg-blue-500',\n      'Active Users (24h)': 'bg-green-500',\n      'Documents Processed': 'bg-indigo-500',\n      'Avg. API Response Time': 'bg-yellow-500'\n    };\n    \n    return {\n      ...stat,\n      icon: icons[stat.name] || UsersIcon,\n      color: colors[stat.name] || 'bg-gray-500'\n    };\n  });\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">Analytics Dashboard</h2>\n        <button \n          onClick={fetchAnalyticsData}\n          disabled={refreshing}\n          className=\"inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700\"\n        >\n          <ArrowPathIcon className={`-ml-1 mr-2 h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}