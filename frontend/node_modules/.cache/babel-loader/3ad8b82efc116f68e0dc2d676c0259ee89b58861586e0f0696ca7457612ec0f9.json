{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/pages/admin/research/GeminiQueryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { callQueryGemini } from '../../../utils/apiClient'; // Adjust path as needed\n\n// Assuming no specific AdminLayout or Card components are known, using basic structure.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiQueryPage = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [documentContext, setDocumentContext] = useState('');\n  const [chatHistory, setChatHistory] = useState('');\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    setResult(null);\n\n    // Attempt to parse documentContext and chatHistory if they are meant to be JSON\n    let parsedDocumentContext = documentContext;\n    if (documentContext.trim().startsWith('{') || documentContext.trim().startsWith('[')) {\n      try {\n        parsedDocumentContext = JSON.parse(documentContext);\n      } catch (err) {\n        // Not valid JSON, send as plain text\n      }\n    }\n    let parsedChatHistory = chatHistory;\n    if (chatHistory.trim().startsWith('{') || chatHistory.trim().startsWith('[')) {\n      try {\n        parsedChatHistory = JSON.parse(chatHistory);\n      } catch (err) {\n        // Not valid JSON, send as plain text\n      }\n    }\n    try {\n      // Pass the potentially parsed values or original strings to the API\n      const data = await callQueryGemini(query, parsedDocumentContext, parsedChatHistory);\n      setResult(data);\n    } catch (err) {\n      setError(err.message || 'An error occurred while querying Gemini.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gemini AI Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gemini-query\",\n          className: \"block mb-1\",\n          children: \"Query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"gemini-query\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          required: true,\n          rows: 5,\n          className: \"w-full p-2 border border-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gemini-doc-context\",\n          className: \"block mb-1\",\n          children: \"Document Context (Optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"gemini-doc-context\",\n          value: documentContext,\n          onChange: e => setDocumentContext(e.target.value),\n          placeholder: \"Provide document context as JSON or plain text. For multiple documents, use an array of objects structure if sending JSON.\",\n          rows: 5,\n          className: \"w-full p-2 border border-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gemini-chat-history\",\n          className: \"block mb-1\",\n          children: \"Chat History (Optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"gemini-chat-history\",\n          value: chatHistory,\n          onChange: e => setChatHistory(e.target.value),\n          placeholder: \"Provide chat history as JSON (e.g., array of {role: 'user/model', parts: [{text: '...'}) or plain text.\",\n          rows: 5,\n          className: \"w-full p-2 border border-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        style: {\n          padding: '10px 15px',\n          border: 'none',\n          borderRadius: '4px',\n          backgroundColor: isLoading ? '#ccc' : '#007bff',\n          color: 'white',\n          cursor: 'pointer'\n        },\n        children: isLoading ? 'Querying...' : 'Query Gemini'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '20px',\n        padding: '10px',\n        border: '1px solid red',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        border: '1px solid #eee',\n        padding: '15px',\n        borderRadius: '4px',\n        backgroundColor: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word',\n          backgroundColor: '#fff',\n          padding: '10px',\n          border: '1px solid #ddd',\n          borderRadius: '4px'\n        },\n        children: typeof result.response === 'object' ? JSON.stringify(result.response, null, 2) : result.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiQueryPage, \"juCUw4BxXRmE+ehh2sDLcMrL1cU=\");\n_c = GeminiQueryPage;\nexport default GeminiQueryPage;\nvar _c;\n$RefreshReg$(_c, \"GeminiQueryPage\");","map":{"version":3,"names":["React","useState","callQueryGemini","jsxDEV","_jsxDEV","GeminiQueryPage","_s","query","setQuery","documentContext","setDocumentContext","chatHistory","setChatHistory","result","setResult","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","parsedDocumentContext","trim","startsWith","JSON","parse","err","parsedChatHistory","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","rows","placeholder","type","disabled","style","padding","border","borderRadius","backgroundColor","color","cursor","marginTop","whiteSpace","wordWrap","response","stringify","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/pages/admin/research/GeminiQueryPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { callQueryGemini } from '../../../utils/apiClient'; // Adjust path as needed\n\n// Assuming no specific AdminLayout or Card components are known, using basic structure.\n\nconst GeminiQueryPage = () => {\n  const [query, setQuery] = useState('');\n  const [documentContext, setDocumentContext] = useState('');\n  const [chatHistory, setChatHistory] = useState('');\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    setResult(null);\n\n    // Attempt to parse documentContext and chatHistory if they are meant to be JSON\n    let parsedDocumentContext = documentContext;\n    if (documentContext.trim().startsWith('{') || documentContext.trim().startsWith('[')) {\n        try {\n            parsedDocumentContext = JSON.parse(documentContext);\n        } catch (err) {\n            // Not valid JSON, send as plain text\n        }\n    }\n\n    let parsedChatHistory = chatHistory;\n    if (chatHistory.trim().startsWith('{') || chatHistory.trim().startsWith('[')) {\n        try {\n            parsedChatHistory = JSON.parse(chatHistory);\n        } catch (err) {\n            // Not valid JSON, send as plain text\n        }\n    }\n\n    try {\n      // Pass the potentially parsed values or original strings to the API\n      const data = await callQueryGemini(query, parsedDocumentContext, parsedChatHistory);\n      setResult(data);\n    } catch (err) {\n      setError(err.message || 'An error occurred while querying Gemini.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-5\">\n      <h1>Gemini AI Query</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <label htmlFor=\"gemini-query\" className=\"block mb-1\">Query:</label>\n          <textarea\n            id=\"gemini-query\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            required\n            rows={5}\n            className=\"w-full p-2 border border-gray-300 rounded\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"gemini-doc-context\" className=\"block mb-1\">Document Context (Optional):</label>\n          <textarea\n            id=\"gemini-doc-context\"\n            value={documentContext}\n            onChange={(e) => setDocumentContext(e.target.value)}\n            placeholder=\"Provide document context as JSON or plain text. For multiple documents, use an array of objects structure if sending JSON.\"\n            rows={5}\n            className=\"w-full p-2 border border-gray-300 rounded\"\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"gemini-chat-history\" className=\"block mb-1\">Chat History (Optional):</label>\n          <textarea\n            id=\"gemini-chat-history\"\n            value={chatHistory}\n            onChange={(e) => setChatHistory(e.target.value)}\n            placeholder=\"Provide chat history as JSON (e.g., array of {role: 'user/model', parts: [{text: '...'}) or plain text.\"\n            rows={5}\n            className=\"w-full p-2 border border-gray-300 rounded\"\n          />\n        </div>\n        <button \n          type=\"submit\" \n          disabled={isLoading} \n          style={{ \n            padding: '10px 15px', \n            border: 'none', \n            borderRadius: '4px', \n            backgroundColor: isLoading ? '#ccc' : '#007bff', \n            color: 'white', \n            cursor: 'pointer' \n          }}\n        >\n          {isLoading ? 'Querying...' : 'Query Gemini'}\n        </button>\n      </form>\n\n      {error && (\n        <div style={{ color: 'red', marginTop: '20px', padding: '10px', border: '1px solid red', borderRadius: '4px' }}>\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n\n      {result && (\n        <div style={{ marginTop: '20px', border: '1px solid #eee', padding: '15px', borderRadius: '4px', backgroundColor: '#f9f9f9' }}>\n          <h2>AI Response:</h2>\n          <pre style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word', backgroundColor: '#fff', padding: '10px', border: '1px solid #ddd', borderRadius: '4px' }}>\n            {typeof result.response === 'object' ? JSON.stringify(result.response, null, 2) : result.response}\n          </pre>\n          {/* TODO: Consider adding a \"Copy Response\" button here */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GeminiQueryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}