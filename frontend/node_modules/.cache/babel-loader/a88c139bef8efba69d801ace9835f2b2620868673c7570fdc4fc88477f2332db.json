{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jwtDecode}from'jwt-decode';import{AuthAPI,api}from'../utils/api';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[isLoading,setIsLoading]=useState(true);const[accessToken,setAccessToken]=useState(localStorage.getItem('accessToken'));useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('accessToken');if(token){try{// Set the token in the API headers\napi.defaults.headers.common['Authorization']=`Bearer ${token}`;// Verify token is valid\nconst decodedToken=jwtDecode(token);const currentTime=Date.now()/1000;if(decodedToken.exp>currentTime){try{// Token is valid, fetch current user info\nconst userResponse=await AuthAPI.getCurrentUser();setUser(userResponse);setIsAuthenticated(true);}catch(error){// Error fetching user info\nconsole.error('Error fetching user data:',error);localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');setUser(null);setIsAuthenticated(false);}}else{// Token expired, clear local storage\nlocalStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');delete api.defaults.headers.common['Authorization'];setUser(null);setIsAuthenticated(false);}}catch(error){console.error('Error initializing auth:',error);// Invalid token, clear local storage\nlocalStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');delete api.defaults.headers.common['Authorization'];setUser(null);setIsAuthenticated(false);}}else{setUser(null);setIsAuthenticated(false);}setIsLoading(false);};initializeAuth();},[]);const login=async _ref2=>{let{email,password}=_ref2;try{setIsLoading(true);console.log(\"Attempting login for:\",email);// Use the AuthAPI.login to ensure consistent URL construction\nconst response=await AuthAPI.login({email,password});// Store tokens in localStorage - handle both formats that might be returned from the backend\nif(response.access){localStorage.setItem('accessToken',response.access);api.defaults.headers.common['Authorization']=`Bearer ${response.access}`;}else if(response.access_token){localStorage.setItem('accessToken',response.access_token);api.defaults.headers.common['Authorization']=`Bearer ${response.access_token}`;}if(response.refresh){localStorage.setItem('refreshToken',response.refresh);}setAccessToken(response.access||response.access_token);setUser(response.user||null);setIsAuthenticated(true);return response;}catch(error){console.error('Login error:',error);throw error;}finally{setIsLoading(false);}};const logout=()=>{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');delete api.defaults.headers.common['Authorization'];setAccessToken(null);setUser(null);setIsAuthenticated(false);};// Registration function\nconst register=async userData=>{try{setIsLoading(true);// Ensure userData has password2 for the API\nconst dataToSend={...userData};if(!dataToSend.password2&&dataToSend.password){dataToSend.password2=dataToSend.password;}console.log(\"Sending registration data to API:\",dataToSend);// Fix the URL construction to ensure proper API prefix\nconst baseUrl=process.env.REACT_APP_API_URL||'http://localhost:8000';// Make sure the URL format is consistent with the API endpoint\nconst apiUrl=`${baseUrl}/api/accounts/register/`;console.log(\"Registration API URL:\",apiUrl);const response=await axios.post(apiUrl,dataToSend,{headers:{'Content-Type':'application/json'}});console.log(\"Registration successful:\",response.data);return response.data;}catch(error){console.error('Registration error:',error);// Improve error handling to extract meaningful error messages\nif(error.response&&error.response.data){const errorData=error.response.data;if(typeof errorData==='object'){// Handle detailed error messages from Django\nconsole.error('API Error Response:',errorData);}if(errorData.detail){throw errorData;}}throw error;}finally{setIsLoading(false);}};const isAdmin=user&&user.role==='admin';const value={user,isAuthenticated,isLoading,accessToken,login,logout,register,isAdmin};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===null){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jwtDecode","AuthAPI","api","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","accessToken","setAccessToken","localStorage","getItem","initializeAuth","token","defaults","headers","common","decodedToken","currentTime","Date","now","exp","userResponse","getCurrentUser","error","console","removeItem","login","_ref2","email","password","log","response","access","setItem","access_token","refresh","logout","register","userData","dataToSend","password2","baseUrl","process","env","REACT_APP_API_URL","apiUrl","post","data","errorData","detail","isAdmin","role","value","Provider","useAuth","context","Error"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { AuthAPI, api } from '../utils/api';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('accessToken');\n      \n      if (token) {\n        try {\n          // Set the token in the API headers\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          \n          // Verify token is valid\n          const decodedToken = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decodedToken.exp > currentTime) {\n            try {\n              // Token is valid, fetch current user info\n              const userResponse = await AuthAPI.getCurrentUser();\n              setUser(userResponse);\n              setIsAuthenticated(true);\n            } catch (error) {\n              // Error fetching user info\n              console.error('Error fetching user data:', error);\n              localStorage.removeItem('accessToken');\n              localStorage.removeItem('refreshToken');\n              setUser(null);\n              setIsAuthenticated(false);\n            }\n          } else {\n            // Token expired, clear local storage\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n            delete api.defaults.headers.common['Authorization'];\n            setUser(null);\n            setIsAuthenticated(false);\n          }\n        } catch (error) {\n          console.error('Error initializing auth:', error);\n          // Invalid token, clear local storage\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          delete api.defaults.headers.common['Authorization'];\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n      \n      setIsLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async ({ email, password }) => {\n    try {\n      setIsLoading(true);\n      console.log(\"Attempting login for:\", email);\n      \n      // Use the AuthAPI.login to ensure consistent URL construction\n      const response = await AuthAPI.login({ email, password });\n      \n      // Store tokens in localStorage - handle both formats that might be returned from the backend\n      if (response.access) {\n        localStorage.setItem('accessToken', response.access);\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.access}`;\n      } else if (response.access_token) {\n        localStorage.setItem('accessToken', response.access_token);\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.access_token}`;\n      }\n      \n      if (response.refresh) {\n        localStorage.setItem('refreshToken', response.refresh);\n      }\n      \n      setAccessToken(response.access || response.access_token);\n      setUser(response.user || null);\n      setIsAuthenticated(true);\n      \n      return response;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setAccessToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Registration function\n  const register = async (userData) => {\n    try {\n      setIsLoading(true);\n      \n      // Ensure userData has password2 for the API\n      const dataToSend = { ...userData };\n      if (!dataToSend.password2 && dataToSend.password) {\n        dataToSend.password2 = dataToSend.password;\n      }\n      \n      console.log(\"Sending registration data to API:\", dataToSend);\n      \n      // Fix the URL construction to ensure proper API prefix\n      const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      // Make sure the URL format is consistent with the API endpoint\n      const apiUrl = `${baseUrl}/api/accounts/register/`;\n      \n      console.log(\"Registration API URL:\", apiUrl);\n      \n      const response = await axios.post(\n        apiUrl,\n        dataToSend,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n      \n      console.log(\"Registration successful:\", response.data);\n      \n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      // Improve error handling to extract meaningful error messages\n      if (error.response && error.response.data) {\n        const errorData = error.response.data;\n        if (typeof errorData === 'object') {\n          // Handle detailed error messages from Django\n          console.error('API Error Response:', errorData);\n        }\n        if (errorData.detail) {\n          throw errorData;\n        }\n      }\n      \n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const isAdmin = user && user.role === 'admin';\n\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    accessToken,\n    login,\n    logout,\n    register,\n    isAdmin\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === null) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}