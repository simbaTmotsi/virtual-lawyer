{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const DarkModeContext=/*#__PURE__*/createContext(null);export const DarkModeProvider=_ref=>{let{children}=_ref;// Check if user previously set a preference\nconst[darkMode,setDarkMode]=useState(()=>{const savedMode=localStorage.getItem('darkMode');return savedMode==='true'||!savedMode&&window.matchMedia('(prefers-color-scheme: dark)').matches;});// Update the class on the html element when dark mode changes\nuseEffect(()=>{if(darkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}localStorage.setItem('darkMode',darkMode);},[darkMode]);const toggleDarkMode=()=>{setDarkMode(!darkMode);};const value={darkMode,toggleDarkMode};return/*#__PURE__*/_jsx(DarkModeContext.Provider,{value:value,children:children});};export const useDarkMode=()=>{return useContext(DarkModeContext);};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","DarkModeContext","DarkModeProvider","_ref","children","darkMode","setDarkMode","savedMode","localStorage","getItem","window","matchMedia","matches","document","documentElement","classList","add","remove","setItem","toggleDarkMode","value","Provider","useDarkMode"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/DarkModeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst DarkModeContext = createContext(null);\n\nexport const DarkModeProvider = ({ children }) => {\n  // Check if user previously set a preference\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode === 'true' || (!savedMode && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  });\n\n  // Update the class on the html element when dark mode changes\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const value = { darkMode, toggleDarkMode };\n  return <DarkModeContext.Provider value={value}>{children}</DarkModeContext.Provider>;\n};\n\nexport const useDarkMode = () => {\n  return useContext(DarkModeContext);\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,eAAe,cAAGN,aAAa,CAAC,IAAI,CAAC,CAE3C,MAAO,MAAM,CAAAO,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C;AACA,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,IAAM,CAC7C,KAAM,CAAAW,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAClD,MAAO,CAAAF,SAAS,GAAK,MAAM,EAAK,CAACA,SAAS,EAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ,CAC1G,CAAC,CAAC,CAEF;AACAd,SAAS,CAAC,IAAM,CACd,GAAIO,QAAQ,CAAE,CACZQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACAT,YAAY,CAACU,OAAO,CAAC,UAAU,CAAEb,QAAQ,CAAC,CAC5C,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAc,cAAc,CAAGA,CAAA,GAAM,CAC3Bb,WAAW,CAAC,CAACD,QAAQ,CAAC,CACxB,CAAC,CAED,KAAM,CAAAe,KAAK,CAAG,CAAEf,QAAQ,CAAEc,cAAe,CAAC,CAC1C,mBAAOnB,IAAA,CAACC,eAAe,CAACoB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAhB,QAAA,CAAEA,QAAQ,CAA2B,CAAC,CACtF,CAAC,CAED,MAAO,MAAM,CAAAkB,WAAW,CAAGA,CAAA,GAAM,CAC/B,MAAO,CAAAzB,UAAU,CAACI,eAAe,CAAC,CACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}