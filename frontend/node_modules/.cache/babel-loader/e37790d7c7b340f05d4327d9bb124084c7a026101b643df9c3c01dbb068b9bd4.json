{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/auth/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  adminOnly = false\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    loading,\n    checkAuthStatus\n  } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Only attempt to verify token if we're not already authenticated and not currently loading\n    if (!loading && !isAuthenticated) {\n      const verify = async () => {\n        const isValid = await checkAuthStatus();\n        if (!isValid) {\n          navigate('/login', {\n            state: {\n              from: location\n            }\n          });\n        }\n      };\n      verify();\n    }\n  }, [isAuthenticated, loading, checkAuthStatus, navigate, location]);\n\n  // Show loading state while auth is being checked\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"auth-loading\",\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true,\n      \"data-testid\": \"auth-redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Add admin check if required\n  if (adminOnly && (user === null || user === void 0 ? void 0 : user.role) !== 'admin') {\n    // Redirect non-admins away from admin routes\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true,\n      \"data-testid\": \"admin-redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"protected-content\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"GZJsFV8Cy7wN06WGJgu7ajukQtA=\", false, function () {\n  return [useAuth, useLocation, useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useLocation","useNavigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","adminOnly","_s","isAuthenticated","user","loading","checkAuthStatus","location","navigate","verify","isValid","state","from","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","role","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\n  const { isAuthenticated, user, loading, checkAuthStatus } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Only attempt to verify token if we're not already authenticated and not currently loading\n    if (!loading && !isAuthenticated) {\n      const verify = async () => {\n        const isValid = await checkAuthStatus();\n        if (!isValid) {\n          navigate('/login', { state: { from: location } });\n        }\n      };\n      verify();\n    }\n  }, [isAuthenticated, loading, checkAuthStatus, navigate, location]);\n\n  // Show loading state while auth is being checked\n  if (loading) {\n    return (\n      <div data-testid=\"auth-loading\" className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login.\n    return <Navigate to=\"/login\" state={{ from: location }} replace data-testid=\"auth-redirect\" />;\n  }\n\n  // Add admin check if required\n  if (adminOnly && user?.role !== 'admin') {\n     // Redirect non-admins away from admin routes\n     return <Navigate to=\"/\" replace data-testid=\"admin-redirect\" />;\n  }\n\n  return <div data-testid=\"protected-content\">{children}</div>;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACrE,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACrE,MAAMW,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACa,OAAO,IAAI,CAACF,eAAe,EAAE;MAChC,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;QACzB,MAAMC,OAAO,GAAG,MAAMJ,eAAe,CAAC,CAAC;QACvC,IAAI,CAACI,OAAO,EAAE;UACZF,QAAQ,CAAC,QAAQ,EAAE;YAAEG,KAAK,EAAE;cAAEC,IAAI,EAAEL;YAAS;UAAE,CAAC,CAAC;QACnD;MACF,CAAC;MACDE,MAAM,CAAC,CAAC;IACV;EACF,CAAC,EAAE,CAACN,eAAe,EAAEE,OAAO,EAAEC,eAAe,EAAEE,QAAQ,EAAED,QAAQ,CAAC,CAAC;;EAEnE;EACA,IAAIF,OAAO,EAAE;IACX,oBACEP,OAAA;MAAK,eAAY,cAAc;MAACe,SAAS,EAAC,2CAA2C;MAAAb,QAAA,eACnFF,OAAA;QAAKe,SAAS,EAAC;MAA8E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG,CAAC;EAEV;EAEA,IAAI,CAACd,eAAe,EAAE;IACpB;IACA;IACA;IACA,oBAAOL,OAAA,CAACL,QAAQ;MAACyB,EAAE,EAAC,QAAQ;MAACP,KAAK,EAAE;QAAEC,IAAI,EAAEL;MAAS,CAAE;MAACY,OAAO;MAAC,eAAY;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChG;;EAEA;EACA,IAAIhB,SAAS,IAAI,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,IAAI,MAAK,OAAO,EAAE;IACtC;IACA,oBAAOtB,OAAA,CAACL,QAAQ;MAACyB,EAAE,EAAC,GAAG;MAACC,OAAO;MAAC,eAAY;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClE;EAEA,oBAAOnB,OAAA;IAAK,eAAY,mBAAmB;IAAAE,QAAA,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9D,CAAC;AAACf,EAAA,CAzCIH,cAAc;EAAA,QAC0CH,OAAO,EAClDF,WAAW,EACXC,WAAW;AAAA;AAAA0B,EAAA,GAHxBtB,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}