{"ast":null,"code":"// Simple notification utility to replace react-toastify\n\n// Store for active notifications\nlet notifications = [];\nlet notificationId = 0;\n\n// Create a container for notifications if it doesn't exist\nconst getContainer = () => {\n  let container = document.getElementById('notification-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'notification-container';\n    container.style.position = 'fixed';\n    container.style.top = '1rem';\n    container.style.right = '1rem';\n    container.style.zIndex = '9999';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.gap = '0.5rem';\n    document.body.appendChild(container);\n  }\n  return container;\n};\n\n// Create a notification element\nconst createNotificationElement = (id, message, type) => {\n  const element = document.createElement('div');\n  element.id = `notification-${id}`;\n  element.style.padding = '1rem';\n  element.style.borderRadius = '0.375rem';\n  element.style.boxShadow = '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)';\n  element.style.marginBottom = '0.5rem';\n  element.style.width = '300px';\n  element.style.animation = 'fadeIn 0.3s ease-out';\n  element.style.transition = 'all 0.3s ease-out';\n\n  // Set colors based on type\n  if (type === 'success') {\n    element.style.backgroundColor = '#10B981';\n    element.style.color = 'white';\n  } else if (type === 'error') {\n    element.style.backgroundColor = '#EF4444';\n    element.style.color = 'white';\n  } else if (type === 'warning') {\n    element.style.backgroundColor = '#F59E0B';\n    element.style.color = 'white';\n  } else {\n    element.style.backgroundColor = '#3B82F6';\n    element.style.color = 'white';\n  }\n  element.textContent = message;\n  return element;\n};\n\n// Add a notification\nconst addNotification = (message, type, duration = 3000) => {\n  const container = getContainer();\n  const id = notificationId++;\n  const element = createNotificationElement(id, message, type);\n  container.appendChild(element);\n  notifications.push({\n    id,\n    element,\n    timeout: setTimeout(() => removeNotification(id), duration)\n  });\n  return id;\n};\n\n// Remove a notification\nconst removeNotification = id => {\n  const notification = notifications.find(n => n.id === id);\n  if (notification) {\n    clearTimeout(notification.timeout);\n    notification.element.style.opacity = '0';\n    setTimeout(() => {\n      notification.element.remove();\n      notifications = notifications.filter(n => n.id !== id);\n    }, 300);\n  }\n};\n\n// Create style for animations\nconst createAnimationStyle = () => {\n  if (!document.getElementById('notification-style')) {\n    const style = document.createElement('style');\n    style.id = 'notification-style';\n    style.textContent = `\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateX(2rem); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\n// Initialize\ncreateAnimationStyle();\n\n// Export utility functions\nexport const toast = {\n  success: (message, duration) => addNotification(message, 'success', duration),\n  error: (message, duration) => addNotification(message, 'error', duration),\n  warning: (message, duration) => addNotification(message, 'warning', duration),\n  info: (message, duration) => addNotification(message, 'info', duration)\n};","map":{"version":3,"names":["notifications","notificationId","getContainer","container","document","getElementById","createElement","id","style","position","top","right","zIndex","display","flexDirection","gap","body","appendChild","createNotificationElement","message","type","element","padding","borderRadius","boxShadow","marginBottom","width","animation","transition","backgroundColor","color","textContent","addNotification","duration","push","timeout","setTimeout","removeNotification","notification","find","n","clearTimeout","opacity","remove","filter","createAnimationStyle","head","toast","success","error","warning","info"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/notification.js"],"sourcesContent":["// Simple notification utility to replace react-toastify\n\n// Store for active notifications\nlet notifications = [];\nlet notificationId = 0;\n\n// Create a container for notifications if it doesn't exist\nconst getContainer = () => {\n  let container = document.getElementById('notification-container');\n  if (!container) {\n    container = document.createElement('div');\n    container.id = 'notification-container';\n    container.style.position = 'fixed';\n    container.style.top = '1rem';\n    container.style.right = '1rem';\n    container.style.zIndex = '9999';\n    container.style.display = 'flex';\n    container.style.flexDirection = 'column';\n    container.style.gap = '0.5rem';\n    document.body.appendChild(container);\n  }\n  return container;\n};\n\n// Create a notification element\nconst createNotificationElement = (id, message, type) => {\n  const element = document.createElement('div');\n  element.id = `notification-${id}`;\n  element.style.padding = '1rem';\n  element.style.borderRadius = '0.375rem';\n  element.style.boxShadow = '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)';\n  element.style.marginBottom = '0.5rem';\n  element.style.width = '300px';\n  element.style.animation = 'fadeIn 0.3s ease-out';\n  element.style.transition = 'all 0.3s ease-out';\n  \n  // Set colors based on type\n  if (type === 'success') {\n    element.style.backgroundColor = '#10B981';\n    element.style.color = 'white';\n  } else if (type === 'error') {\n    element.style.backgroundColor = '#EF4444';\n    element.style.color = 'white';\n  } else if (type === 'warning') {\n    element.style.backgroundColor = '#F59E0B';\n    element.style.color = 'white';\n  } else {\n    element.style.backgroundColor = '#3B82F6';\n    element.style.color = 'white';\n  }\n  \n  element.textContent = message;\n  \n  return element;\n};\n\n// Add a notification\nconst addNotification = (message, type, duration = 3000) => {\n  const container = getContainer();\n  const id = notificationId++;\n  const element = createNotificationElement(id, message, type);\n  \n  container.appendChild(element);\n  notifications.push({ id, element, timeout: setTimeout(() => removeNotification(id), duration) });\n  \n  return id;\n};\n\n// Remove a notification\nconst removeNotification = (id) => {\n  const notification = notifications.find(n => n.id === id);\n  if (notification) {\n    clearTimeout(notification.timeout);\n    notification.element.style.opacity = '0';\n    setTimeout(() => {\n      notification.element.remove();\n      notifications = notifications.filter(n => n.id !== id);\n    }, 300);\n  }\n};\n\n// Create style for animations\nconst createAnimationStyle = () => {\n  if (!document.getElementById('notification-style')) {\n    const style = document.createElement('style');\n    style.id = 'notification-style';\n    style.textContent = `\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateX(2rem); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\n// Initialize\ncreateAnimationStyle();\n\n// Export utility functions\nexport const toast = {\n  success: (message, duration) => addNotification(message, 'success', duration),\n  error: (message, duration) => addNotification(message, 'error', duration),\n  warning: (message, duration) => addNotification(message, 'warning', duration),\n  info: (message, duration) => addNotification(message, 'info', duration),\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}