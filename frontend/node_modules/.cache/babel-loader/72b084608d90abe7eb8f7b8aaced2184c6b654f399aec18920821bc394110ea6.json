{"ast":null,"code":"/**\n * API request utility for making authenticated requests\n */\n\n// Base API request function\nconst apiRequest = async (endpoint, options = {}) => {\n  try {\n    // Set default headers if not provided\n    if (!options.headers) {\n      options.headers = {\n        'Content-Type': 'application/json'\n      };\n    }\n\n    // Add auth token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    console.log('API Request:', options.method || 'GET', endpoint);\n    console.log('Request options:', options);\n\n    // Make the fetch request\n    const response = await fetch(endpoint.startsWith('http') ? endpoint : `${process.env.REACT_APP_API_URL || ''}${endpoint}`, options);\n\n    // Check if the response is JSON\n    const contentType = response.headers.get('content-type');\n    const isJson = contentType && contentType.includes('application/json');\n\n    // Parse response data based on content type\n    let data;\n    if (isJson) {\n      data = await response.json();\n    } else {\n      data = await response.text();\n    }\n\n    // Handle unsuccessful responses\n    if (!response.ok) {\n      console.log('API request failed:', response.status, response.statusText);\n      console.log('Response data:', data);\n\n      // For 500 errors, we may need to add more specific handling\n      if (response.status === 500) {\n        console.log('Server error detected. Check server logs for more details.');\n      }\n\n      // Fix: Create a proper Error object instead of throwing a plain object\n      const apiError = new Error(`API Error: ${response.status}`);\n      apiError.status = response.status;\n      apiError.data = data;\n      throw apiError;\n    }\n    return data;\n  } catch (error) {\n    // Log the error for debugging\n    console.error('API request failed:', error);\n\n    // If it's already our formatted error, just rethrow it\n    if (error && error.status) {\n      throw error;\n    }\n\n    // Fix: Create a proper Error object instead of throwing a plain object\n    const networkError = new Error(`Network Error: ${error.message || 'Unable to connect to server'}`);\n    networkError.status = 0;\n    networkError.data = null;\n    throw networkError;\n  }\n};\n\n// Auth API endpoints\nexport const AuthAPI = {\n  // Login\n  login: async credentials => {\n    try {\n      return await apiRequest('/api/accounts/proxy-login/', {\n        method: 'POST',\n        body: JSON.stringify(credentials)\n      });\n    } catch (error) {\n      console.error('Login API error:', error);\n      throw error;\n    }\n  },\n  // Register\n  register: async userData => {\n    try {\n      return await apiRequest('/api/accounts/register/', {\n        method: 'POST',\n        body: JSON.stringify(userData)\n      });\n    } catch (error) {\n      console.error('Registration API error:', error);\n      throw error;\n    }\n  },\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      return await apiRequest('/api/accounts/me/');\n    } catch (error) {\n      console.error('Get current user API error:', error);\n      throw error;\n    }\n  },\n  // Logout\n  logout: async () => {\n    try {\n      return await apiRequest('/api/accounts/logout/', {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.error('Logout API error:', error);\n      // Still clear token even if logout API fails\n      localStorage.removeItem('token');\n      throw error;\n    }\n  }\n};\n\n// Export the base request function as default\nexport default apiRequest;","map":{"version":3,"names":["apiRequest","endpoint","options","headers","token","localStorage","getItem","console","log","method","response","fetch","startsWith","process","env","REACT_APP_API_URL","contentType","get","isJson","includes","data","json","text","ok","status","statusText","apiError","Error","error","networkError","message","AuthAPI","login","credentials","body","JSON","stringify","register","userData","getCurrentUser","logout","removeItem"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/api.js"],"sourcesContent":["/**\n * API request utility for making authenticated requests\n */\n\n// Base API request function\nconst apiRequest = async (endpoint, options = {}) => {\n  try {\n    // Set default headers if not provided\n    if (!options.headers) {\n      options.headers = {\n        'Content-Type': 'application/json',\n      };\n    }\n\n    // Add auth token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    console.log('API Request:', options.method || 'GET', endpoint);\n    console.log('Request options:', options);\n\n    // Make the fetch request\n    const response = await fetch(endpoint.startsWith('http') ? endpoint : `${process.env.REACT_APP_API_URL || ''}${endpoint}`, options);\n    \n    // Check if the response is JSON\n    const contentType = response.headers.get('content-type');\n    const isJson = contentType && contentType.includes('application/json');\n    \n    // Parse response data based on content type\n    let data;\n    if (isJson) {\n      data = await response.json();\n    } else {\n      data = await response.text();\n    }\n\n    // Handle unsuccessful responses\n    if (!response.ok) {\n      console.log('API request failed:', response.status, response.statusText);\n      console.log('Response data:', data);\n      \n      // For 500 errors, we may need to add more specific handling\n      if (response.status === 500) {\n        console.log('Server error detected. Check server logs for more details.');\n      }\n      \n      // Fix: Create a proper Error object instead of throwing a plain object\n      const apiError = new Error(`API Error: ${response.status}`);\n      apiError.status = response.status;\n      apiError.data = data;\n      throw apiError;\n    }\n\n    return data;\n  } catch (error) {\n    // Log the error for debugging\n    console.error('API request failed:', error);\n    \n    // If it's already our formatted error, just rethrow it\n    if (error && error.status) {\n      throw error;\n    }\n    \n    // Fix: Create a proper Error object instead of throwing a plain object\n    const networkError = new Error(`Network Error: ${error.message || 'Unable to connect to server'}`);\n    networkError.status = 0;\n    networkError.data = null;\n    throw networkError;\n  }\n};\n\n// Auth API endpoints\nexport const AuthAPI = {\n  // Login\n  login: async (credentials) => {\n    try {\n      return await apiRequest('/api/accounts/proxy-login/', {\n        method: 'POST',\n        body: JSON.stringify(credentials)\n      });\n    } catch (error) {\n      console.error('Login API error:', error);\n      throw error;\n    }\n  },\n  \n  // Register\n  register: async (userData) => {\n    try {\n      return await apiRequest('/api/accounts/register/', {\n        method: 'POST',\n        body: JSON.stringify(userData)\n      });\n    } catch (error) {\n      console.error('Registration API error:', error);\n      throw error;\n    }\n  },\n  \n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      return await apiRequest('/api/accounts/me/');\n    } catch (error) {\n      console.error('Get current user API error:', error);\n      throw error;\n    }\n  },\n  \n  // Logout\n  logout: async () => {\n    try {\n      return await apiRequest('/api/accounts/logout/', {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.error('Logout API error:', error);\n      // Still clear token even if logout API fails\n      localStorage.removeItem('token');\n      throw error;\n    }\n  }\n};\n\n// Export the base request function as default\nexport default apiRequest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}