{"ast":null,"code":"import axios from'axios';// Create custom instances\nexport const api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000/api',// Make sure /api is included\nheaders:{'Content-Type':'application/json'}});// Set authorization header if token exists\nconst token=localStorage.getItem('accessToken');if(token){api.defaults.headers.common['Authorization']=`Bearer ${token}`;}// Handle token refresh properly\napi.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refreshToken');if(!refreshToken){throw new Error(\"No refresh token available\");}// Use the correct endpoint with base URL for token refresh\nconst response=await axios.post(`${process.env.REACT_APP_API_URL||'http://localhost:8000/api'}/accounts/refresh/`,{refresh:refreshToken});const{access}=response.data;localStorage.setItem('accessToken',access);api.defaults.headers.common['Authorization']=`Bearer ${access}`;originalRequest.headers['Authorization']=`Bearer ${access}`;return api(originalRequest);}catch(refreshError){// Handle refresh failure (usually by logging out user)\nlocalStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');return Promise.reject(refreshError);}}return Promise.reject(error);});export const AuthAPI={login:async credentials=>{// Use the full URL with /api for login endpoint\nconst baseUrl=process.env.REACT_APP_API_URL||'http://localhost:8000';const apiUrl=`${baseUrl}/api/accounts/proxy-login/`;console.log(\"Login API URL:\",apiUrl);const response=await axios.post(apiUrl,credentials,{headers:{'Content-Type':'application/json'}});// Automatically set the Authorization header after login\nif(response.data.access){api.defaults.headers.common['Authorization']=`Bearer ${response.data.access}`;}else if(response.data.access_token){api.defaults.headers.common['Authorization']=`Bearer ${response.data.access_token}`;}return response.data;},register:async userData=>{// Ensure password2 is included in the request payload\n// If password2 isn't provided but password is, use password as password2\nconst dataToSend={...userData};if(!dataToSend.password2&&dataToSend.password){dataToSend.password2=dataToSend.password;}try{// Fix the URL construction to ensure /api prefix\nconst baseUrl=process.env.REACT_APP_API_URL||'http://localhost:8000';// Make sure the URL format is consistent: baseUrl + /api/accounts/register/\nconst apiUrl=`${baseUrl}/api/accounts/register/`;console.log(\"Registration API URL:\",apiUrl);const response=await axios.post(apiUrl,dataToSend,{headers:{'Content-Type':'application/json'}});console.log(\"Registration successful:\",response.data);return response.data;}catch(error){var _error$response2,_error$response3;console.error(\"Registration error status:\",(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status);console.error(\"Registration error details:\",((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);throw error;}},getCurrentUser:async()=>{const response=await api.get('/api/accounts/me/');return response.data;}};// General API request function\nconst apiRequest=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let isFormData=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;try{const config={method:method,url:endpoint};if(data){if(isFormData){config.data=data;config.headers={...config.headers,'Content-Type':'multipart/form-data'};}else{config.data=data;}}const response=await api(config);return response.data;}catch(error){console.error(`API request failed: ${endpoint}`,error);throw error;}};export default apiRequest;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","token","localStorage","getItem","defaults","common","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","refreshToken","Error","post","refresh","access","data","setItem","refreshError","removeItem","Promise","reject","AuthAPI","login","credentials","baseUrl","apiUrl","console","log","access_token","register","userData","dataToSend","password2","password","_error$response2","_error$response3","message","getCurrentUser","get","apiRequest","endpoint","method","arguments","length","undefined","isFormData","url"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create custom instances\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',  // Make sure /api is included\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Set authorization header if token exists\nconst token = localStorage.getItem('accessToken');\nif (token) {\n  api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\n// Handle token refresh properly\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (!refreshToken) {\n          throw new Error(\"No refresh token available\");\n        }\n        \n        // Use the correct endpoint with base URL for token refresh\n        const response = await axios.post(\n          `${process.env.REACT_APP_API_URL || 'http://localhost:8000/api'}/accounts/refresh/`, \n          { refresh: refreshToken }\n        );\n        const { access } = response.data;\n        \n        localStorage.setItem('accessToken', access);\n        api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n        originalRequest.headers['Authorization'] = `Bearer ${access}`;\n        \n        return api(originalRequest);\n      } catch (refreshError) {\n        // Handle refresh failure (usually by logging out user)\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        return Promise.reject(refreshError);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const AuthAPI = {\n  login: async (credentials) => {\n    // Use the full URL with /api for login endpoint\n    const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n    const apiUrl = `${baseUrl}/api/accounts/proxy-login/`;\n    console.log(\"Login API URL:\", apiUrl);\n    \n    const response = await axios.post(\n      apiUrl,\n      credentials,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }\n    );\n    \n    // Automatically set the Authorization header after login\n    if (response.data.access) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n    } else if (response.data.access_token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\n    }\n    \n    return response.data;\n  },\n  register: async (userData) => {\n    // Ensure password2 is included in the request payload\n    // If password2 isn't provided but password is, use password as password2\n    const dataToSend = { ...userData };\n    if (!dataToSend.password2 && dataToSend.password) {\n      dataToSend.password2 = dataToSend.password;\n    }\n    \n    try {\n      // Fix the URL construction to ensure /api prefix\n      const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      // Make sure the URL format is consistent: baseUrl + /api/accounts/register/\n      const apiUrl = `${baseUrl}/api/accounts/register/`;\n        \n      console.log(\"Registration API URL:\", apiUrl);\n      \n      const response = await axios.post(\n        apiUrl,\n        dataToSend,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n      console.log(\"Registration successful:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Registration error status:\", error.response?.status);\n      console.error(\"Registration error details:\", error.response?.data || error.message);\n      throw error;\n    }\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/api/accounts/me/');\n    return response.data;\n  },\n};\n\n// General API request function\nconst apiRequest = async (endpoint, method = 'GET', data = null, isFormData = false) => {\n  try {\n    const config = {\n      method: method,\n      url: endpoint,\n    };\n    \n    if (data) {\n      if (isFormData) {\n        config.data = data;\n        config.headers = {\n          ...config.headers,\n          'Content-Type': 'multipart/form-data',\n        };\n      } else {\n        config.data = data;\n      }\n    }\n    \n    const response = await api(config);\n    return response.data;\n  } catch (error) {\n    console.error(`API request failed: ${endpoint}`, error);\n    throw error;\n  }\n};\n\nexport default apiRequest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}