{"ast":null,"code":"/**\n * Format date to a more readable format\n * @param {string} dateString - Date string to format\n * @returns {string} Formatted date string\n */export const formatDate=dateString=>{if(!dateString)return'N/A';const date=new Date(dateString);return date.toLocaleDateString(undefined,{year:'numeric',month:'short',day:'numeric'});};/**\n * Get CSS class for invoice status\n * @param {string} status - Invoice status\n * @returns {string} CSS classes for the status\n */export const getStatusClass=status=>{switch(status){case'draft':return'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';case'sent':return'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200';case'paid':return'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-200';case'overdue':return'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-200';case'void':return'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';default:return'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';}};/**\n * Format currency amount\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */export const formatCurrency=amount=>{if(amount===null||amount===undefined)return'$0.00';return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount);};","map":{"version":3,"names":["formatDate","dateString","date","Date","toLocaleDateString","undefined","year","month","day","getStatusClass","status","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/index.js"],"sourcesContent":["/**\n * Format date to a more readable format\n * @param {string} dateString - Date string to format\n * @returns {string} Formatted date string\n */\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'N/A';\n  \n  const date = new Date(dateString);\n  return date.toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n/**\n * Get CSS class for invoice status\n * @param {string} status - Invoice status\n * @returns {string} CSS classes for the status\n */\nexport const getStatusClass = (status) => {\n  switch (status) {\n    case 'draft':\n      return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';\n    case 'sent':\n      return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-200';\n    case 'paid':\n      return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-200';\n    case 'overdue':\n      return 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-200';\n    case 'void':\n      return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';\n    default:\n      return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300';\n  }\n};\n\n/**\n * Format currency amount\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */\nexport const formatCurrency = (amount) => {\n  if (amount === null || amount === undefined) return '$0.00';\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  }).format(amount);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,UAAU,CAAIC,UAAU,EAAK,CACxC,GAAI,CAACA,UAAU,CAAE,MAAO,KAAK,CAE7B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,MAAO,CAAAC,IAAI,CAACE,kBAAkB,CAACC,SAAS,CAAE,CACxCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CACJ,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAc,CAAIC,MAAM,EAAK,CACxC,OAAQA,MAAM,EACZ,IAAK,OAAO,CACV,MAAO,+DAA+D,CACxE,IAAK,MAAM,CACT,MAAO,kEAAkE,CAC3E,IAAK,MAAM,CACT,MAAO,sEAAsE,CAC/E,IAAK,SAAS,CACZ,MAAO,8DAA8D,CACvE,IAAK,MAAM,CACT,MAAO,+DAA+D,CACxE,QACE,MAAO,+DAA+D,CAC1E,CACF,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAc,CAAIC,MAAM,EAAK,CACxC,GAAIA,MAAM,GAAK,IAAI,EAAIA,MAAM,GAAKP,SAAS,CAAE,MAAO,OAAO,CAC3D,MAAO,IAAI,CAAAQ,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM,CAAC,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}