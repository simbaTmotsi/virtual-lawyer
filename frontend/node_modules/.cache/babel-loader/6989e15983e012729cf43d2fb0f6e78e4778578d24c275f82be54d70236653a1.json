{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/charts/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  type,\n  data,\n  options = {},\n  height = '100%'\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n\n    // Ensure the DOM is available and data exists\n    if (!(chartRef !== null && chartRef !== void 0 && chartRef.current) || !data) {\n      return;\n    }\n\n    // Create default options with responsive settings\n    const defaultOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false\n        }\n      }\n    };\n\n    // Merge default options with provided options\n    const mergedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n\n    // Create the chart\n    const ctx = chartRef.current.getContext('2d');\n    const newChartInstance = new Chart(ctx, {\n      type,\n      data,\n      options: mergedOptions\n    });\n    setChartInstance(newChartInstance);\n\n    // Cleanup\n    return () => {\n      if (newChartInstance) {\n        newChartInstance.destroy();\n      }\n    };\n  }, [data, type, options]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartComponent, \"mxEuazXhvYq3z2SUX35ki5IOCuY=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","type","data","options","height","_s","chartRef","chartInstance","setChartInstance","destroy","current","defaultOptions","responsive","maintainAspectRatio","plugins","legend","position","tooltip","mode","intersect","mergedOptions","ctx","getContext","newChartInstance","style","width","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/charts/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ type, data, options = {}, height = '100%' }) => {\n  const chartRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    // Destroy previous chart instance if it exists\n    if (chartInstance) {\n      chartInstance.destroy();\n    }\n\n    // Ensure the DOM is available and data exists\n    if (!chartRef?.current || !data) {\n      return;\n    }\n\n    // Create default options with responsive settings\n    const defaultOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top',\n        },\n        tooltip: {\n          mode: 'index',\n          intersect: false,\n        },\n      },\n    };\n\n    // Merge default options with provided options\n    const mergedOptions = { ...defaultOptions, ...options };\n\n    // Create the chart\n    const ctx = chartRef.current.getContext('2d');\n    const newChartInstance = new Chart(ctx, {\n      type,\n      data,\n      options: mergedOptions,\n    });\n\n    setChartInstance(newChartInstance);\n\n    // Cleanup\n    return () => {\n      if (newChartInstance) {\n        newChartInstance.destroy();\n      }\n    };\n  }, [data, type, options]);\n\n  return (\n    <div style={{ height, width: '100%' }}>\n      <canvas ref={chartRef} />\n    </div>\n  );\n};\n\nexport default ChartComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,OAAO,GAAG,CAAC,CAAC;EAAEC,MAAM,GAAG;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,aAAa,EAAE;MACjBA,aAAa,CAACE,OAAO,CAAC,CAAC;IACzB;;IAEA;IACA,IAAI,EAACH,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEI,OAAO,KAAI,CAACR,IAAI,EAAE;MAC/B;IACF;;IAEA;IACA,MAAMS,cAAc,GAAG;MACrBC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;UACPC,IAAI,EAAE,OAAO;UACbC,SAAS,EAAE;QACb;MACF;IACF,CAAC;;IAED;IACA,MAAMC,aAAa,GAAG;MAAE,GAAGT,cAAc;MAAE,GAAGR;IAAQ,CAAC;;IAEvD;IACA,MAAMkB,GAAG,GAAGf,QAAQ,CAACI,OAAO,CAACY,UAAU,CAAC,IAAI,CAAC;IAC7C,MAAMC,gBAAgB,GAAG,IAAI1B,KAAK,CAACwB,GAAG,EAAE;MACtCpB,IAAI;MACJC,IAAI;MACJC,OAAO,EAAEiB;IACX,CAAC,CAAC;IAEFZ,gBAAgB,CAACe,gBAAgB,CAAC;;IAElC;IACA,OAAO,MAAM;MACX,IAAIA,gBAAgB,EAAE;QACpBA,gBAAgB,CAACd,OAAO,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACP,IAAI,EAAED,IAAI,EAAEE,OAAO,CAAC,CAAC;EAEzB,oBACEJ,OAAA;IAAKyB,KAAK,EAAE;MAAEpB,MAAM;MAAEqB,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eACpC3B,OAAA;MAAQ4B,GAAG,EAAErB;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxDIL,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AA0DpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}