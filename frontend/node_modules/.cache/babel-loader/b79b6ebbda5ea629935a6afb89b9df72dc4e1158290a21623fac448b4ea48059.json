{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,adminOnly=false}=_ref;const{user,isAuthenticated,isLoading}=useAuth();const location=useLocation();// Show loading state while checking authentication\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"})});}// If not authenticated, redirect to login\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// If admin-only route and user is not admin, redirect to dashboard\nif(adminOnly&&(user===null||user===void 0?void 0:user.role)!=='admin'){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}// Render the protected component\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","adminOnly","user","isAuthenticated","isLoading","location","className","to","state","from","replace","role"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const location = useLocation();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If admin-only route and user is not admin, redirect to dashboard\n  if (adminOnly && user?.role !== 'admin') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // Render the protected component\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,SAAS,CAAG,KAAM,CAAC,CAAAF,IAAA,CACrD,KAAM,CAAEG,IAAI,CAAEC,eAAe,CAAEC,SAAU,CAAC,CAAGT,OAAO,CAAC,CAAC,CACtD,KAAM,CAAAU,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B;AACA,GAAIU,SAAS,CAAE,CACb,mBACEP,IAAA,QAAKS,SAAS,CAAC,2CAA2C,CAAAN,QAAA,cACxDH,IAAA,QAAKS,SAAS,CAAC,8EAA8E,CAAM,CAAC,CACjG,CAAC,CAEV,CAEA;AACA,GAAI,CAACH,eAAe,CAAE,CACpB,mBAAON,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,QAAS,CAAE,CAACK,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,GAAIT,SAAS,EAAI,CAAAC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAES,IAAI,IAAK,OAAO,CAAE,CACvC,mBAAOd,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,GAAG,CAACG,OAAO,MAAE,CAAC,CACpC,CAEA;AACA,MAAO,CAAAV,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}