{"ast":null,"code":"import axios from 'axios';\n\n// Base API URL - update to match your backend\nconst API_BASE_URL = 'http://localhost:8000/api'; // Adjust this to match your backend URL\n\n// Token storage functions\nexport const setAuthToken = token => {\n  if (token) {\n    localStorage.setItem('auth_token', token);\n  } else {\n    localStorage.removeItem('auth_token');\n  }\n};\nexport const getAuthToken = () => {\n  return localStorage.getItem('auth_token');\n};\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to attach token\napi.interceptors.request.use(config => {\n  const token = getAuthToken();\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// API request helper\nconst apiRequest = async (endpoint, method = 'GET', data = null, authRequired = true) => {\n  try {\n    console.log(`Making ${method} request to ${endpoint}`);\n\n    // If auth is required but no token exists\n    if (authRequired && !getAuthToken()) {\n      console.error('Authentication required but no token found');\n      const error = new Error('Authentication required');\n      error.status = 401;\n      throw error;\n    }\n    const config = {\n      url: endpoint,\n      method: method,\n      data: method !== 'GET' ? data : null,\n      params: method === 'GET' && data ? data : null\n    };\n    const response = await api(config);\n    return response.data;\n  } catch (error) {\n    console.error('API request failed:', error);\n\n    // Handle error responses\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      const customError = new Error(error.response.data.detail || 'Request failed');\n      customError.status = error.response.status;\n      customError.data = error.response.data;\n      throw customError;\n    }\n\n    // If it's already our custom error with status, just rethrow it\n    if (error.status && error.message) {\n      throw error;\n    }\n\n    // For network errors or other unhandled errors\n    const networkError = new Error(error.message || 'Network error');\n    networkError.status = 500;\n    networkError.data = null;\n    throw networkError;\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["axios","API_BASE_URL","setAuthToken","token","localStorage","setItem","removeItem","getAuthToken","getItem","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","apiRequest","endpoint","method","data","authRequired","console","log","Error","status","url","params","response","customError","detail","message","networkError"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Base API URL - update to match your backend\nconst API_BASE_URL = 'http://localhost:8000/api'; // Adjust this to match your backend URL\n\n// Token storage functions\nexport const setAuthToken = (token) => {\n  if (token) {\n    localStorage.setItem('auth_token', token);\n  } else {\n    localStorage.removeItem('auth_token');\n  }\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem('auth_token');\n};\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to attach token\napi.interceptors.request.use(\n  (config) => {\n    const token = getAuthToken();\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// API request helper\nconst apiRequest = async (endpoint, method = 'GET', data = null, authRequired = true) => {\n  try {\n    console.log(`Making ${method} request to ${endpoint}`);\n    \n    // If auth is required but no token exists\n    if (authRequired && !getAuthToken()) {\n      console.error('Authentication required but no token found');\n      const error = new Error('Authentication required');\n      error.status = 401;\n      throw error;\n    }\n\n    const config = {\n      url: endpoint,\n      method: method,\n      data: method !== 'GET' ? data : null,\n      params: method === 'GET' && data ? data : null,\n    };\n\n    const response = await api(config);\n    return response.data;\n  } catch (error) {\n    console.error('API request failed:', error);\n    \n    // Handle error responses\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      const customError = new Error(error.response.data.detail || 'Request failed');\n      customError.status = error.response.status;\n      customError.data = error.response.data;\n      throw customError;\n    }\n    \n    // If it's already our custom error with status, just rethrow it\n    if (error.status && error.message) {\n      throw error;\n    }\n    \n    // For network errors or other unhandled errors\n    const networkError = new Error(error.message || 'Network error');\n    networkError.status = 500;\n    networkError.data = null;\n    throw networkError;\n  }\n};\n\nexport default apiRequest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}