{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport apiRequest, { setAuthToken, getAuthToken } from '../utils/api'; // Import API utility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [token, setTokenState] = useState(getAuthToken()); // Initialize token from storage\n  const [isAuthenticated, setIsAuthenticated] = useState(!!getAuthToken());\n  const handleSetToken = newToken => {\n    setAuthToken(newToken); // Store in localStorage\n    setTokenState(newToken); // Update context state\n    setIsAuthenticated(!!newToken); // Update authentication state\n  };\n\n  // Function to fetch user profile based on token\n  const fetchUserProfile = useCallback(async () => {\n    if (!token) {\n      setUser(null);\n      setLoading(false);\n      setIsAuthenticated(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      // Ensure this endpoint matches your backend\n      const userData = await apiRequest('/accounts/profile/', 'GET');\n      setUser(userData);\n      setIsAuthenticated(true); // Successfully fetched profile\n    } catch (error) {\n      console.error(\"Failed to fetch user profile:\", error);\n      // If token is invalid (e.g., 401 error), log out\n      if (error.status === 401 || error.status === 403) {\n        handleSetToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [token]); // Dependency on token\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [fetchUserProfile]); // Fetch profile when token changes or on initial load\n\n  const login = async (email, password) => {\n    try {\n      console.log('Attempting login with:', email);\n\n      // Ensure this endpoint matches your backend login endpoint\n      const data = await apiRequest('/accounts/login/', 'POST', {\n        email,\n        password\n      }, false);\n      console.log('Login response:', data);\n      if (data && data.access) {\n        // Ensure your backend returns token as 'access'\n        handleSetToken(data.access);\n        // Fetch profile after setting token\n        await fetchUserProfile();\n        return true;\n      } else {\n        console.error(\"Login response missing access token:\", data);\n        throw new Error(\"Login failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      handleSetToken(null); // Clear token on login failure\n      setUser(null);\n      setIsAuthenticated(false);\n      throw error; // Re-throw error for the component to handle\n    }\n  };\n  const register = async userData => {\n    try {\n      // Adjust endpoint as needed, e.g., '/accounts/register/'\n      // Assuming registration doesn't automatically log in or return a token\n      await apiRequest('/accounts/register/', 'POST', userData, false);\n      // Optionally, you could automatically log in the user here by calling login()\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      throw error; // Re-throw error for the component to handle\n    }\n  };\n  const logout = () => {\n    handleSetToken(null); // Clear token from storage and state\n    setUser(null); // Clear user state\n    setIsAuthenticated(false);\n    // Optionally: Call a backend logout endpoint if it exists to invalidate the token server-side\n    // apiRequest('/accounts/logout/', 'POST').catch(err => console.error(\"Backend logout failed:\", err));\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    fetchUserProfile // Expose this so components can refresh user data\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"ydtqdIwPb8coLXUqLn9KYSgG2mM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","apiRequest","setAuthToken","getAuthToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","setTokenState","isAuthenticated","setIsAuthenticated","handleSetToken","newToken","fetchUserProfile","userData","error","console","status","login","email","password","log","data","access","Error","register","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport apiRequest, { setAuthToken, getAuthToken } from '../utils/api'; // Import API utility\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [token, setTokenState] = useState(getAuthToken()); // Initialize token from storage\n  const [isAuthenticated, setIsAuthenticated] = useState(!!getAuthToken());\n\n  const handleSetToken = (newToken) => {\n    setAuthToken(newToken); // Store in localStorage\n    setTokenState(newToken); // Update context state\n    setIsAuthenticated(!!newToken); // Update authentication state\n  };\n\n  // Function to fetch user profile based on token\n  const fetchUserProfile = useCallback(async () => {\n    if (!token) {\n      setUser(null);\n      setLoading(false);\n      setIsAuthenticated(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      // Ensure this endpoint matches your backend\n      const userData = await apiRequest('/accounts/profile/', 'GET');\n      setUser(userData);\n      setIsAuthenticated(true); // Successfully fetched profile\n    } catch (error) {\n      console.error(\"Failed to fetch user profile:\", error);\n      // If token is invalid (e.g., 401 error), log out\n      if (error.status === 401 || error.status === 403) {\n        handleSetToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [token]); // Dependency on token\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [fetchUserProfile]); // Fetch profile when token changes or on initial load\n\n  const login = async (email, password) => {\n    try {\n      console.log('Attempting login with:', email);\n      \n      // Ensure this endpoint matches your backend login endpoint\n      const data = await apiRequest('/accounts/login/', 'POST', { email, password }, false);\n      console.log('Login response:', data);\n      \n      if (data && data.access) { // Ensure your backend returns token as 'access'\n        handleSetToken(data.access);\n        // Fetch profile after setting token\n        await fetchUserProfile();\n        return true;\n      } else {\n        console.error(\"Login response missing access token:\", data);\n        throw new Error(\"Login failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      handleSetToken(null); // Clear token on login failure\n      setUser(null);\n      setIsAuthenticated(false);\n      throw error; // Re-throw error for the component to handle\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      // Adjust endpoint as needed, e.g., '/accounts/register/'\n      // Assuming registration doesn't automatically log in or return a token\n      await apiRequest('/accounts/register/', 'POST', userData, false);\n      // Optionally, you could automatically log in the user here by calling login()\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      throw error; // Re-throw error for the component to handle\n    }\n  };\n\n  const logout = () => {\n    handleSetToken(null); // Clear token from storage and state\n    setUser(null); // Clear user state\n    setIsAuthenticated(false);\n    // Optionally: Call a backend logout endpoint if it exists to invalidate the token server-side\n    // apiRequest('/accounts/logout/', 'POST').catch(err => console.error(\"Backend logout failed:\", err));\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    fetchUserProfile, // Expose this so components can refresh user data\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}