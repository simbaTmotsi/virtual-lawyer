{"ast":null,"code":"var _jsxFileName = \"/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/auth/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  adminOnly = false\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    loading,\n    checkAuthStatus\n  } = useAuth();\n  const location = useLocation();\n  useEffect(() => {\n    // Verify token is valid on protected route access\n    if (!loading && !isAuthenticated) {\n      checkAuthStatus(true);\n    }\n  }, [isAuthenticated, loading, checkAuthStatus]);\n\n  // Show loading state while auth is being checked\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Add admin check if required\n  if (adminOnly && (user === null || user === void 0 ? void 0 : user.role) !== 'admin') {\n    // Redirect non-admins away from admin routes\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"LdQHwbPMf/OzXsoYErfVvxEBgmo=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","adminOnly","_s","isAuthenticated","user","loading","checkAuthStatus","location","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","role","_c","$RefreshReg$"],"sources":["/Users/simbatmotsi/Documents/Projects/virtual-lawyer/frontend/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\n  const { isAuthenticated, user, loading, checkAuthStatus } = useAuth();\n  const location = useLocation();\n\n  useEffect(() => {\n    // Verify token is valid on protected route access\n    if (!loading && !isAuthenticated) {\n      checkAuthStatus(true);\n    }\n  }, [isAuthenticated, loading, checkAuthStatus]);\n\n  // Show loading state while auth is being checked\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-500\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Add admin check if required\n  if (adminOnly && user?.role !== 'admin') {\n     // Redirect non-admins away from admin routes\n     return <Navigate to=\"/\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC,eAAe;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACrE,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACY,OAAO,IAAI,CAACF,eAAe,EAAE;MAChCG,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACH,eAAe,EAAEE,OAAO,EAAEC,eAAe,CAAC,CAAC;;EAE/C;EACA,IAAID,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKU,SAAS,EAAC,2CAA2C;MAAAR,QAAA,eACxDF,OAAA;QAAKU,SAAS,EAAC;MAA8E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG,CAAC;EAEV;EAEA,IAAI,CAACT,eAAe,EAAE;IACpB;IACA;IACA;IACA;IACA,oBAAOL,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAER;MAAS,CAAE;MAACS,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIX,SAAS,IAAI,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,OAAO,EAAE;IACtC;IACA,oBAAOnB,OAAA,CAACJ,QAAQ;MAACmB,EAAE,EAAC,GAAG;MAACG,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;EAEA,OAAOZ,QAAQ;AACjB,CAAC;AAACE,EAAA,CAnCIH,cAAc;EAAA,QAC0CH,OAAO,EAClDD,WAAW;AAAA;AAAAuB,EAAA,GAFxBnB,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}